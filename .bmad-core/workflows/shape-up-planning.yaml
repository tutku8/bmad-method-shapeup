# <!-- Powered by BMADâ„¢ Core -->
workflow:
  id: shape-up-planning
  name: Shape Up Pitch Creation
  description: >-
    Shape Up methodology workflow that guides existing BMad agents to create
    appetite-disciplined pitches with fat marker solutions and circuit breakers
  type: shape-up
  project_types:
    - feature-enhancement
    - new-feature
    - user-experience-improvement
    - system-improvement
    - brownfield-enhancement

  sequence:
    - step: appetite_definition
      agent: bmad-orchestrator
      action: define appetite constraints
      notes: |
        CRITICAL: Start with appetite, not solution exploration
        Ask user:
        - What's the time investment you're willing to make? (weeks, people)
        - How much is this problem worth to your business?
        - What are you NOT willing to spend on this?
        Set appetite constraints that will drive all subsequent decisions.

    - agent: analyst
      action: validate-problem-and-appetite
      creates: problem-validation.md
      requires: appetite_constraints
      notes: |
        ANALYST SHAPE UP FOCUS: Problem & Appetite Validation
        - Validate raw problem definition with user evidence
        - Validate appetite against problem significance  
        - Identify complexity risks and rabbit holes using advanced elicitation
        - Define circuit breakers and stopping triggers
        - NO solution exploration - pure problem/appetite validation

    - agent: pm
      action: create-business-scope-analysis
      creates: business-scope.md
      requires: problem-validation.md
      notes: |
        PM SHAPE UP FOCUS: Business Perspective & Scope
        - Business perspective and stakeholder impact analysis
        - Scope boundaries definition and "no-gos" 
        - Risk mitigation from business/stakeholder perspective
        - Success metrics and business outcomes
        - Stakeholder communication planning

    - agent: ux-expert
      action: create-fat-marker-sketches
      creates: solution-sketches.md
      requires: business-scope.md
      notes: |
        UX EXPERT SHAPE UP FOCUS: Fat Marker Sketches & Affordances
        - Fat marker solution sketches using breadboarding technique
        - Define places, affordances, and connections (per Shape Up Ch.4)
        - High-level user flows without visual details
        - Solution direction preserving developer autonomy
        - Focus on "what" and "where" not "how"

    - agent: po
      action: validate-deliverability-and-risks
      creates: deliverability-assessment.md
      requires: solution-sketches.md
      notes: |
        PO SHAPE UP FOCUS: Deliverability & Risk Management
        - Validate appetite vs scope alignment
        - Assess deliverability within timeframe
        - Circuit breaker validation and risk mitigation
        - Task/epic breakdown (can be separate artifact)
        - Betting table preparation

    - agent: architect
      action: technical-feasibility-review
      creates: technical-assessment.md
      requires: solution-sketches.md
      optional: true
      condition: codebase_access_available
      notes: |
        ARCHITECT SHAPE UP FOCUS: Technical Feasibility (Optional)
        - Technical feasibility within appetite constraints
        - Integration complexity assessment with existing systems
        - Technical risk identification and mitigation
        - Architecture guidance without over-prescription
        - Preserve implementation flexibility for developers

    - step: pitch_finalization
      agent: bmad-orchestrator
      action: shape-up-methodology-compliance
      creates: final-pitch.md
      requires: validation-report.md
      notes: |
        Final Shape Up methodology compliance check:
        - Ensure all Shape Up elements present (problem, appetite, solution, circuit breakers)
        - Validate developer autonomy preserved throughout
        - Confirm appetite discipline maintained in all sections
        - Ready pitch for betting table presentation
        - Convert to final pitch format for team handoff

  flow_diagram: |
    ```mermaid
    graph TD
        A[Start: Raw Problem/Idea] --> B[bmad-orchestrator: Define Appetite]
        B --> C[analyst: Problem & Appetite Validation]
        C --> D[pm: Business Scope Analysis]
        D --> E[ux-expert: Fat Marker Sketches]
        E --> F[po: Deliverability & Risk Assessment]
        F --> G{Codebase Access?}
        G -->|Yes| H[architect: Technical Feasibility]
        G -->|No| I[bmad-orchestrator: Final Validation]
        H --> I
        I --> J{Issues Found?}
        J -->|Yes| K[Return to relevant agent]
        J -->|No| L[Final Shape Up Pitch Ready]
        K --> F

        style L fill:#90EE90
        style B fill:#FFE4B5
        style C fill:#FFE4B5
        style D fill:#FFE4B5
        style E fill:#DDA0DD
        style F fill:#F0E68C
        style H fill:#87CEEB
        style I fill:#ADD8E6
    ```

  decision_guidance:
    when_to_use:
      - Need appetite-disciplined planning instead of feature-complete requirements
      - Want to avoid over-specification for development teams
      - Building pitches for betting table decisions
      - Need circuit breakers for complexity management
      - Want to preserve developer technical autonomy
      - Following Shape Up methodology principles

  agent_guidance:
    analyst_shape_up_mode:
      - Validate raw problem with user evidence and data
      - Validate appetite against problem significance and business impact
      - Use advanced elicitation to identify rabbit holes and complexity traps
      - Define circuit breakers based on appetite protection
      - NO solution exploration - pure problem/appetite validation

    pm_shape_up_mode:
      - Focus on business perspective and stakeholder impact
      - Define scope boundaries and clear "no-gos"
      - Business risk mitigation and stakeholder communication
      - Success metrics and business outcomes definition
      - Appetite discipline from business perspective

    ux_expert_shape_up_mode:
      - Create fat marker sketches using breadboarding technique
      - Define places, affordances, and connections (Shape Up Ch.4)
      - High-level user flows without visual design details
      - Solution direction that preserves developer autonomy
      - Focus on "what" and "where" not "how" to implement

    po_shape_up_mode:
      - Validate appetite vs scope alignment and deliverability
      - Circuit breaker validation and risk mitigation planning
      - Task/epic breakdown (separate artifact if needed)
      - Betting table preparation and pitch readiness
      - Final deliverability assessment within appetite

    architect_shape_up_mode:
      - Technical feasibility within appetite constraints (optional)
      - Integration complexity with existing systems assessment
      - Technical risk identification without over-prescription
      - Architecture guidance preserving implementation flexibility
      - Available only when codebase access is present

  handoff_prompts:
    orchestrator_to_analyst: "Appetite defined: {{appetite}}. Now validate the raw problem with user evidence and identify rabbit holes that could break this appetite. Use advanced elicitation for complexity risk analysis."
    analyst_to_pm: "Problem and appetite validation complete. Now focus on business perspective, scope boundaries, stakeholder impact, and business risk mitigation."
    pm_to_ux_expert: "Business scope analysis complete. Now create fat marker sketches using breadboarding - define places, affordances, and connections without visual details."
    ux_expert_to_po: "Solution sketches complete. Now validate deliverability within appetite, assess risks, and prepare for betting table consideration."
    po_to_architect: "Deliverability assessment complete. Optional: Provide technical feasibility review within appetite constraints (only if codebase access available)."
    architect_to_orchestrator: "Technical assessment complete. Ready for final Shape Up methodology compliance validation."
    po_to_orchestrator: "Deliverability assessment complete. Ready for final Shape Up methodology compliance validation (no architect needed)."
    issues_found: "Issues found in [section] by [agent]. Please return to [responsible_agent] to fix within appetite constraints."
    complete: "Shape Up pitch validated and ready for betting table consideration. All artifacts preserve developer autonomy while providing clear guidance."
